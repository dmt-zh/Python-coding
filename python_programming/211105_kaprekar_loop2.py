# Напишите функцию kaprekar_loop(n), которая принимает целое число, и запускающую "Процесс Капрекара"
# (если это возможно), выводящее на печать каждое число цикла с новой строки до тех пор, пока не будет
# получено число Капрекара. Конечных постоянных Капрекара (таких, которые в результате процесса переходят
# сами в себя) известно 4: 495, 6174, 549945, 631764.

# Для некоторых 6-значных чисел возможно не будет найдена постоянная Капрекара, но процесс "зациклится", т.е.
# одни и те же числа будут получаться по кругу. В этом случае необходимо прервать процедуру на первом повторном числе.

# Таким образом возможны 3 случая:
# Число не удовлетворяет условиям процесса Капрекара - выводим сообщение "Ошибка! На вход подано число {},
# не удовлетворяющее условиям процесса Капрекара"
# Процесс Капрекара сойдётся к постоянной Капрекара (495, 6174, 549945 или 631764) - выводим на печать все числа,
# начиная с исходного и до постоянной Капрекара, каждое с новой строки
# Процесс Капрекара зациклится - выводим все числа до момента зацикливания, после чего выводим сообщение
# "Следующее число - {}, кажется процесс зациклился..."


def kaprekar_loop(n):
    prev = []
    if n in [100, 1000, 100000] or not len(str(n)) in [3, 4, 6] or len(set(str(n))) < 2:
        print(f'Ошибка! На вход подано число {n}, не удовлетворяющее условиям процесса Капрекара')
        return
    else:
        print(n)
        while n not in [495, 6174, 549945, 631764]:
            n = int(''.join(map(str, sorted(str(n), reverse=True)))) - int(''.join(map(str, sorted(str(n)))))
            if n in prev:
                print(f'Следующее число - {n}, кажется процесс зациклился...')
                break
            else:
                print(n)
                prev.append(n)

# Рассмотрим два списка:

# messages = ['Hi, Linda', 'Hi, Sam', 'How are you doing?']
# senders = ['Sam Fisher', 'Linda', 'Sam Fisher']

# Первый список представляет набор отправленных сообщений в некотором мессенджере, второй список — набор отправителей
# этих сообщений. Причем сообщение messages[i] отправлено пользователем senders[i]. Каждое сообщение представляет собой
# последовательность слов, разделенных пробелом (знаки препинания считаются частями слов). Количество слов — это общее
# число слов, отправленное пользователем. Обратите внимание, что каждый пользователь может отправлять более одного сообщения.
#
# Например, пользователь Sam Fisher отправил 2 слова в первом сообщении и 4 слова во втором, следовательно,
# его количество слов равно 2+4=6.

# Реализуйте функцию best_sender(), которая принимает два аргумента в следующем порядке:
# messages — список сообщений
# senders — список имен отправителей

# Функция должна определять отправителя, имеющего наибольшее количество слов, и возвращать его имя. Если таких
# отправителей несколько, следует вернуть имя того, чье имя больше в лексикографическом сравнении.

# Примечание. Гарантируется, что длины передаваемых в функцию списков совпадают.


from typing import Dict, List, Tuple, Sequence, Set
from collections import defaultdict


def best_sender(messages: Sequence[str], senders: Sequence[str]) -> str:
    stats = defaultdict(int)
    for m, s in zip(messages, senders):
        stats[s] += len(m.split(' '))

    return max(stats, key=lambda x: (stats[x], x))
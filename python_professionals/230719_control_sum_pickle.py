# По каналу связи передаются pickle файл, содержащий сериализованный словарь или список, и целое число — контрольная сумма,
# которая вычисляется по следующему правилу:
# для словаря — сумма всех целочисленных ключей (тип int)
# для списка — произведение минимального и максимального целочисленных элементов (тип int)

# Напишите программу, которая вычисляет контрольную сумму для объекта, содержащегося в pickle файле, и сравнивает ее с данным
# целым числом.

# Формат входных данных
# На вход программе в первой строке подается название pickle файла, в котором содержится сериализованный словарь или список,
# в следующей — целое число.

# Формат выходных данных
# Программа должна вычислить контрольную сумму для объекта, который содержится в данном pickle файле, и если она совпадает
# с введенным числом, вывести текст: Контрольные суммы совпадают
# если она не совпадает с введенным числом, вывести текст: Контрольные суммы не совпадают

# Примечание. Если список (словарь) не содержит целочисленных элементов (ключей), то считайте, что контрольная сумма равна  0


import pickle

def check_sum(filename, control_sum):
    with open(filename, 'rb') as bfin:
        objects = pickle.load(bfin)

    if isinstance(objects, dict):
        return sum(filter(lambda x: type(x) == int, objects.keys()), start=0) == int(control_sum)

    if isinstance(objects, list):
        numbers = list(filter(lambda x: type(x) == int, objects))
        prod = min(numbers) * max(numbers) if numbers else 0
        return int(control_sum) == prod


fname, sum_ = input(), input()
print('Контрольные суммы совпадают' if check_sum(fname, sum_) else 'Контрольные суммы не совпадают')
# Реализуйте декоратор prefix, который принимает два аргумента в следующем порядке:

# string — произвольная строка
# to_the_end — булево значение, по умолчанию равное False
# Декоратор должен добавлять строку string к возвращаемому значению декорируемой функции. 
# Если to_the_end имеет значение True, строка string добавляется в конец, если False — в начало.

# Также декоратор должен сохранять имя и строку документации декорируемой функции.

# Примечание 1. Гарантируется, что возвращаемым значением декорируемой функции является объект типа str.

# Примечание 2. Не забывайте про то, что декоратор не должен поглощать возвращаемое значение декорируемой функции, 
# а также должен уметь декорировать функции с произвольным количеством позиционных и именованных аргументов.


from functools import wraps

def prefix(string, to_the_end=False):
    def add_prefix(func):
        @wraps(func)
        def wrapper(*args, **kwargs):
            func_result = func(*args, **kwargs)
            return f'{func_result}{string}' if to_the_end else f'{string}{func_result}'
        return wrapper
    return add_prefix
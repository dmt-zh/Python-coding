# Реализуйте функцию print_bar_chart(), которая принимает два аргумента в следующем порядке:

# data — строка или список строк
# mark — одиночный символ

# Функция должна определять:
# сколько раз встречается каждый символ в строке, если data является строкой
# сколько раз встречается каждая строка в списке, если data является списком

# Затем функция должна выводить результат в виде столбчатой диаграммы, указывая каждый символ (строку) и его количество.
# Количество отображается как повторение символа mark соответствующее число раз, например, если mark='+', то количество,
# равное четырем, будет отображено как ++++. Символы (строки) в диаграмме должны быть расположены в порядке уменьшения
# количества, при равных количествах — в своем исходном порядке, каждая на отдельной строке, в следующем формате:
# <символ или строка> |<количество>

# Примечание 1. Обратите внимание на второй тест, функция должна добавлять нужное количество пробелов, если строка имеет
# меньшую длину, чем другие.

# Примечание 2. Программа должна учитывать регистр. То есть, например, строки Python и python считаются различными.




from collections import Counter
from typing import Sequence

def print_bar_chart(objs: Sequence[str | Sequence[str]], mark: str) -> None:
    stats = Counter(objs)
    max_len = max(map(len, stats.keys()))
    for k, v in sorted(stats.items(), key=lambda x: x[-1], reverse=True):
        print(f'{k:{max_len}} |{v * mark}')
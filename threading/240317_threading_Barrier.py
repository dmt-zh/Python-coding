# Создайте и запустите 4 потока с целевой задачей, которая выполняет (вызывает) две функции. 
# Целевая задача должна выполнять две функции в два этапа, разделенные одним барьером. 
# Вторая функция должна вызываться только после успешного выполнения первой функции всеми потоками - участниками.

# Создайте объект барьера, создайте целевую функцию в аргументы которой передайте объект барьера и две 
# функции: task_st_1, task_st_2. При преодолении барьера должна вызываться функция финализатора finalizer. 
# Создайте и запустите 4 потока, выполняющую целевую функцию.

# Две задачи с именами task_st_1 и task_st_2 заданы в тестирующей системе. 
# Функция finalizer также заранее определена в тестирующей системе.


import threading

barrier = threading.Barrier(4, action=finalizer)

def task(barrier, func1, func2):
    func1()
    barrier.wait()
    func2()

thr = [threading.Thread(target=task, args=(barrier, task_st_1, task_st_2)) for i in range(4)]
for t in thr:
    t.start()
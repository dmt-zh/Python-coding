# В какой-то момент времени один из потоков получает разрешение по внешнему условию (например, получает ответ от микросервиса),
# в этом случае в коде программы для него формируется локальный атрибут stor_local.permission = True

# Для остальных потоков такой атрибут не будет назначен. С течением времени несколько потоков могут получить положительный
# ответ от сервиса, а значит уже у нескольких потоков будет атрибут stor_local.permission = True.

# Перепишите функцию permission так, чтобы целевую задачу выполнил успешно только тот поток, кто дважды ее вызвал уже имея атрибут разрешения.
# В функции разрешено использовать только атрибуты stor_local.

# В тестирующей системе определен класс, создаются экземпляры потоков, создано локальное хранилище потоков
# stor_local = threading.local(), для некоторых потоков в некоторый момент времени создается и назначается атрибут stor_local.permission = True.


def permission():
    if getattr(stor_local, 'permission', False):
        if hasattr(stor_local, 'count'):
            return True
        stor_local.count = 1
    return False
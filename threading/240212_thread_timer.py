# Воспроизведем функционал логирования отдельным потоком - таймером по простому условию: если рабочий поток не выполнил свою
# целевую задачу вовремя (не выполнил за контрольное время), то выполняется вспомогательный поток с целевой задачей логирования. 
# Если выполнил - запуск потока логирования отменяется. Решение оформить в виде функции с именем test_thread_timer(t_check), 
# где t_check - контрольное значение времени.

# В функции test_thread_timer Вам необходимо:
#     Создать и запустить рабочий поток с именем (атрибут name) Thread (англ).
#     Поставить на запуск с ожиданием t_check вспомогательный поток логирования с именем Timer (англ.).
#     Ожидать завершения рабочего потока.
#     Если время между окончанием завершения и запуском рабочего потока не превышает контрольного значения - отменить запуск потока логирования.


import threading

def test_thread_timer(t_check: int | float):
    thread = threading.Thread(target=executer, daemon=True, name="Thread")
    timer = threading.Timer(interval=t_check, function=logging)
    timer.name = "Timer"
    
    thread.start()
    timer.start()

    thread.join(t_check)
    timer.cancel()
    timer.join()
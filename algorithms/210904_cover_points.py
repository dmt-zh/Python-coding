# Задача на программирование: покрыть отрезки точками
# По данным nn отрезкам необходимо найти множество точек минимального размера, для которого каждый из
# отрезков содержит хотя бы одну из точек. В первой строке дано число 1 ≤ n ≤ 100 отрезков. Каждая из
# последующих nn строк содержит по два числа 0 ≤ l ≤ r ≤ 10^9, задающих начало и конец отрезка. Выведите
# оптимальное число mm точек и сами mm точек. Если таких множеств точек несколько, выведите любое из них.
# Sample Input 1:
# 3
# 1 3
# 2 5
# 3 6

# Sample Output 1:
# 1
# 3

# Sample Input 2:
# 4
# 4 7
# 1 3
# 2 5
# 5 6

# Sample Output 2:
# 2
# 3 6



ins = [list(map(int, input().split())) for _ in range(int(input()))]      # получаем в заданном диапазоне отрезки

segments = sorted(ins, key=lambda x: x[1])                                # сортируем отрезки по правой границе

res = []                                                                  # инициализируем массив для результата алгоритма
start = segments[0][1]                                                    # старт - правая граница первого отрезка
res.append(start)                                                         # добавляем стартовый элемент в результат

for s in range(len(segments)):                                            # для каждого отрезка в массиве всех отрезков
    if segments[s][0] > res[-1]:                                          # если левая граница отрезка больше правой границы предыдущего отрезка
        res.append(segments[s][1])                                        # добавляем правую границу этого отрезка в результат

print(str(len(res)) + '\n' + ' '.join(map(str, res)))                     # выводим оптимальное количество необходимых точек для покрытия
